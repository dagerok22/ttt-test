{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///./src/logger.js","webpack:///./src/server.js","webpack:///external \"lodash\"","webpack:///external \"mongoose\"","webpack:///external \"body-parser\"","webpack:///external \"path\"","webpack:///./src/routes/game.js","webpack:///./src/model/Game.js","webpack:///./src/routes/index.js","webpack:///external \"bunyan\"","webpack:///external \"cookie-parser\"","webpack:///external \"morgan\"","webpack:///./src/app.js","webpack:///external \"socket.io\"","webpack:///./src/config.js","webpack:///./src/db/connection.js","webpack:///external \"http\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","logger","a","createLogger","http","Server","_app__WEBPACK_IMPORTED_MODULE_1__","io","socket_io__WEBPACK_IMPORTED_MODULE_0___default","listen","process","env","port","_logger__WEBPACK_IMPORTED_MODULE_2__","warn","game_router","external_express_default","Router","req","res","server","on","socket","game","info","undefined","constructor","indexOfPlayerToTurnFirst","this","_field","_indexOfPlayerToTurn","_turns","_winner","getTurns","getState","field","winner","retry","playerTurn","row","column","player","push","isOver","makeTurnForPlayer","availableCells","map","cell","filter","reduce","b","concat","console","log","Math","round","random","length","isWinning","external_lodash_default","flatten","e","board","emit","cords","result","render","routes_game","routes_router","use","__webpack_exports__","app","express__WEBPACK_IMPORTED_MODULE_0___default","set","path__WEBPACK_IMPORTED_MODULE_1___default","join","__dirname","morgan__WEBPACK_IMPORTED_MODULE_2___default","body_parser__WEBPACK_IMPORTED_MODULE_4___default","json","urlencoded","extended","cookie_parser__WEBPACK_IMPORTED_MODULE_3___default","static","_routes_index__WEBPACK_IMPORTED_MODULE_6__","next","err","Error","status","locals","message","error","config","connectionAddress","external_mongoose_default","Promise","global","connect"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"express\");","import bunyan from \"bunyan\";\n\nconst logger = bunyan.createLogger({name: 'ttt-game-test'});\n\nexport {logger};","import socketIO from 'socket.io';\nimport app from './app'\nimport {logger} from './logger';\n\nconst http = require('http').Server(app);\nconst io = socketIO(http);\n\nhttp.listen(process.env.port || 3000, () => {\n    logger.warn('Listening on port 3000')\n});\n\nexport {io, http};","module.exports = require(\"lodash\");","module.exports = require(\"mongoose\");","module.exports = require(\"body-parser\");","module.exports = require(\"path\");","import express from 'express';\nimport {io} from \"../server\";\nimport {Game} from \"../model/Game\";\nimport {logger} from \"../logger\";\n\nconst router = express.Router();\n\nrouter.get('/', (req, res)=>{\n    io.on('connection', (socket)=>{\n        logger.info('Connected');\n        let game;\n        if(game === undefined)\n        game = new Game(1);\n        socket.emit('connection-status', 'connected');\n        socket.emit('update-field', game.getState());\n\n        socket.on('player-turn', (cords)=>{\n            let result = game.playerTurn(cords, 1);\n                socket.emit('update-field', result);\n        });\n\n        socket.on('retry', ()=>{\n            let result = game.retry(1);\n            socket.emit('update-field-retry', result);\n        });\n        socket.on('disconnect', ()=>{\n            logger.info('Disconnected');\n            socket.emit('connection-status', 'Disconnected');\n        })\n    });\n    return res.render('game');\n});\n\nexport default router;","import {logger} from \"../logger\";\nimport _ from 'lodash';\n\n\nclass Game {\n    constructor(indexOfPlayerToTurnFirst) {\n        this._field = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        this._indexOfPlayerToTurn = indexOfPlayerToTurnFirst;\n        this._turns = [];\n        this._winner = 0;\n    }\n\n    getTurns() {\n        return this._turns\n    };\n\n    getState() {\n        return {field: this._field, winner: this._winner}\n    };\n\n    retry(indexOfPlayerToTurnFirst) {\n        this._field = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        this._indexOfPlayerToTurn = indexOfPlayerToTurnFirst;\n        this._turns = [];\n        this._winner = 0;\n        return this.getState();\n    }\n\n\n    playerTurn({row, column}, player) {\n        if (!row || !column || this._indexOfPlayerToTurn !== player || this._field[+row][+column] !== 0)\n            return;\n        this._field[row][column] = player;\n        this._turns.push({row, column, player});\n        this._indexOfPlayerToTurn = player === 1 ? 2 : 1;\n        let winner = this.isOver();\n        if (winner === 0) {\n            this.makeTurnForPlayer(player === 1 ? 2 : 1);\n            winner = this.isOver();\n        }\n        this._winner = winner;\n        return this.getState();\n    }\n\n    makeTurnForPlayer(player) {\n        if (this._indexOfPlayerToTurn !== player)\n            return;\n\n        let availableCells = this._field.map((row, i) => {\n            let available = row.map((cell, i) => {\n                if (cell === 0)\n                    return i;\n            });\n            return available.map(cell => [i, cell]).filter(a => a[0] !== undefined && a[1] !== undefined);\n        }).reduce((a, b) => a.concat(b), []);\n\n        console.log(availableCells);\n        let cell = availableCells[Math.round(Math.random() * (availableCells.length - 1))];\n        this._field[cell[0]][cell[1]] = player;\n        this._turns.push({row: cell[0], column: cell[1], player});\n        this._indexOfPlayerToTurn = player === 2 ? 1 : 2;\n    }\n\n    isOver() {\n        if (this.isWinning(1))\n            return 1;\n        if (this.isWinning(2))\n            return 2;\n\n        const emptyCells = _.flatten(this._field).reduce((a, e) => e === 0 ? a + 1 : a, 0);\n        if (!emptyCells)\n            return -1;\n\n        return 0;\n    }\n\n    isWinning(player) {\n        const board = _.flatten(this._field);\n        return (board[0] === player && board[1] === player && board[2] === player) ||\n            (board[3] === player && board[4] === player && board[5] === player) ||\n            (board[6] === player && board[7] === player && board[8] === player) ||\n            (board[0] === player && board[3] === player && board[6] === player) ||\n            (board[1] === player && board[4] === player && board[7] === player) ||\n            (board[2] === player && board[5] === player && board[8] === player) ||\n            (board[0] === player && board[4] === player && board[8] === player) ||\n            (board[2] === player && board[4] === player && board[6] === player);\n    }\n}\n\nexport {\n    Game\n};","import express from 'express';\nimport game from './game';\nimport {io} from \"../server\";\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => res.render('index'));\n\nrouter.use('/game', game);\n\nexport default router;","module.exports = require(\"bunyan\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"morgan\");","import express from 'express';\nimport path from 'path';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\n\nimport connectio from './db/connection';\nimport index from './routes/index';\n\n\nconst app = express();\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(morgan('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\n\napp.use(function (req, res, next) {\n    const err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\napp.use(function (err, req, res) {\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nexport default app;\n","module.exports = require(\"socket.io\");","export default {\n    connectionAddress: `mongodb://localhost:27017/ttt-game`,\n}","import mongoose from \"mongoose\";\nimport config from \"../config\";\n\n\nmongoose.Promise = global.Promise;\ntry {\n    mongoose.connect(config.connectionAddress);\n}catch (error){\n    console.log(error);\n}","module.exports = require(\"http\");"],"sourceRoot":""}