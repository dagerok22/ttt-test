{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/logger.js","webpack:///external \"mongoose\"","webpack:///external \"express\"","webpack:///external \"lodash\"","webpack:///./src/server.js","webpack:///external \"body-parser\"","webpack:///external \"path\"","webpack:///./src/model/Statistics.js","webpack:///./src/routes/game.js","webpack:///./src/model/Game.js","webpack:///./src/routes/index.js","webpack:///external \"bunyan\"","webpack:///external \"cookie-parser\"","webpack:///external \"morgan\"","webpack:///./src/app.js","webpack:///external \"socket.io\"","webpack:///./src/config.js","webpack:///./src/db/connection.js","webpack:///external \"http\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","logger","a","createLogger","require","http","Server","_app__WEBPACK_IMPORTED_MODULE_1__","io","socket_io__WEBPACK_IMPORTED_MODULE_0___default","listen","process","env","PORT","_logger__WEBPACK_IMPORTED_MODULE_2__","warn","port","Statistics_moveSchema","external_mongoose_default","Schema","row","Number","column","player","String","Statistics_gameSchema","winner","type","required","moves","default","toJSON","virtuals","toObject","virtual","this","Statistics_statisticsSchema","user","games","date","Date","now","toLocaleDateString","set","getTime","Statistics","model","game_router","external_express_default","Router","_ref2","req","res","server","on","socket","info","game","constructor","indexOfPlayerToTurnFirst","_field","_indexOfPlayerToTurn","_turns","_winner","_games","AI_PLAYER","HUMAN_PLAYER","getTurns","getState","field","getStats","stats","map","gameStat","turns","push","retry","playerTurn","isInteger","isOver","makeTurnForPlayer","external_lodash_default","flatten","emptyCells","filter","e","cell","length","getBestMove","Math","floor","random","isWinning","reduce","flattenField","bestMove","minimax","index","newField","availSpots","emptyIndexies","score","move","result","bestScore","board","emit","game_asyncToGenerator","handshake","address","save","_id","cords","render","next","Types","ObjectId","isValid","params","statsId","json","error","message","findById","status","_x","_x2","_x3","apply","arguments","routes_game","routes_router","use","__webpack_exports__","app","express__WEBPACK_IMPORTED_MODULE_0___default","path__WEBPACK_IMPORTED_MODULE_1___default","join","__dirname","morgan__WEBPACK_IMPORTED_MODULE_2___default","body_parser__WEBPACK_IMPORTED_MODULE_4___default","urlencoded","extended","cookie_parser__WEBPACK_IMPORTED_MODULE_3___default","static","_routes_index__WEBPACK_IMPORTED_MODULE_6__","err","Error","locals","config","connectionAddress","Promise","global","connect","console","log"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import bunyan from \"bunyan\";\n\nconst logger = bunyan.createLogger({name: 'ttt-game-test'});\n\nexport {logger};","module.exports = require(\"mongoose\");","module.exports = require(\"express\");","module.exports = require(\"lodash\");","import socketIO from 'socket.io';\nimport app from './app';\nimport {logger} from './logger';\n\nconst http = require('http').Server(app);\nconst io = socketIO(http);\n\nhttp.listen(process.env.PORT || 3000, () => {\n    logger.warn(`Listening on port ${process.env.port || 3000}`);\n});\n\nexport {io, http};\n","module.exports = require(\"body-parser\");","module.exports = require(\"path\");","import mongoose from 'mongoose';\n\nconst moveSchema = new mongoose.Schema({\n    row: Number,\n    column: Number,\n    player: String,\n});\n\nconst gameSchema = new mongoose.Schema({\n    winner: {\n        type: String,\n        required: true,\n    },\n    moves: {\n        type: [moveSchema],\n        default: [],\n    },\n}, {\n    toJSON: {\n        virtuals: true,\n    },\n    toObject: {\n        virtuals: true,\n    },\n});\n\ngameSchema.virtual('formattedWinner').get(function() {\n    return this.winner === 1 ? 'You won' : this.winner === 2 ? 'You lost' : 'Draw';\n});\n\nconst statisticsSchema = new mongoose.Schema({\n    user: {\n        type: String,\n    },\n    games: {\n        type: [gameSchema],\n        required: true,\n        default: [],\n    },\n    date: {\n        type: Number,\n        required: true,\n        default: Date.now(),\n        get: (date) => new Date(date).toLocaleDateString(),\n        set: (date) => date.getTime(),\n    },\n});\n\nexport default mongoose.model('Statistic', statisticsSchema);\n","import mongoose from 'mongoose';\nimport express from 'express';\nimport {io} from '../server';\nimport {Game} from '../model/Game';\nimport Statistics from '../model/Statistics';\nimport {logger} from '../logger';\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n  io.on('connection', (socket) => {\n    logger.info('Connected');\n    const game = new Game('X');\n    socket.emit('connection-status', 'connected');\n    socket.emit('update-field', game.getState());\n\n    socket.on('save-stats', async ()=>{\n        const stats = new Statistics();\n        stats.user = socket.handshake.address;\n        stats.games = game.getStats();\n        await stats.save();\n        logger.info('stats saved', stats);\n        socket.emit('stats-saved', stats._id);\n    });\n\n    socket.on('player-turn', (cords) => {\n        logger.info('Player ', game.HUMAN_PLAYER);\n      let result = game.playerTurn(cords, game.HUMAN_PLAYER);\n      logger.info('results', result);\n      socket.emit('update-field', result);\n    });\n\n    socket.on('retry', () => {\n      let result = game.retry(game.HUMAN_PLAYER);\n      socket.emit('update-field-retry', result);\n    });\n    socket.on('disconnect', () => {\n      logger.info('Disconnected');\n      socket.emit('connection-status', 'Disconnected');\n    });\n  });\n  return res.render('game');\n});\n\nrouter.get('/statistics/:statsId', async (req, res, next)=>{\n    if (!mongoose.Types.ObjectId.isValid(req.params.statsId)) {\n        return res.json({error: 1, message: 'Invalid ID'});\n    }\n\n    const stats = await Statistics.findById(req.params.statsId);\n    if (!stats) {\n        res.status = 404;\n        return next();\n    }\n\n    return res.render('stats', stats.toJSON());\n});\n\nexport default router;\n","import _ from 'lodash';\nimport {\n    logger,\n} from '../logger';\n\n\nclass Game {\n    constructor(indexOfPlayerToTurnFirst) {\n        this._field = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n        ];\n        this._indexOfPlayerToTurn = indexOfPlayerToTurnFirst;\n        this._turns = [];\n        this._winner = 0;\n        this._games = [];\n        this.AI_PLAYER = 'O';\n        this.HUMAN_PLAYER = 'X';\n    }\n\n    getTurns() {\n        return this._turns;\n    };\n\n    getState() {\n        return {\n            field: this._field,\n            winner: this._winner,\n        };\n    };\n\n    getStats() {\n        const stats = this._games.map((gameStat) => {\n            let gameObj = {\n                winner: gameStat.winner,\n                moves: gameStat.turns,\n            };\n            return gameObj;\n        });\n        logger.info(this);\n        if (this._winner) {\n            stats.push({\n                winner: this._winner,\n                moves: this._turns,\n            });\n        }\n        return stats;\n    }\n\n    retry(indexOfPlayerToTurnFirst) {\n        if (this._winner) {\n            this._games.push({\n                turns: this._turns,\n                winner: this._winner,\n            });\n        }\n        this._field = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n        ];\n        this._indexOfPlayerToTurn = indexOfPlayerToTurnFirst;\n        this._turns = [];\n        this._winner = 0;\n        return this.getState();\n    }\n\n    playerTurn({\n        row,\n        column,\n    }, player) {\n        logger.info('start', this._indexOfPlayerToTurn, player, this._field[+row][+column]);\n        if (!row || !column || this._indexOfPlayerToTurn !== player || !Number.isInteger(this._field[+row][+column])) {\n            return;\n        }\n        this._field[row][column] = player;\n        this._turns.push({\n            row,\n            column,\n            player,\n        });\n        this._indexOfPlayerToTurn = player === this.HUMAN_PLAYER ? this.AI_PLAYER : this.HUMAN_PLAYER;\n        let winner = this.isOver();\n        if (winner === 0) {\n            this.makeTurnForPlayer(player === this.HUMAN_PLAYER ? this.AI_PLAYER : this.HUMAN_PLAYER);\n            winner = this.isOver();\n        }\n        this._winner = winner;\n        return this.getState();\n    }\n\n    makeTurnForPlayer(player) {\n        if (this._indexOfPlayerToTurn !== player) {\n            return;\n        }\n        logger.info(_.flatten(this._field));\n        const emptyCells = _.flatten(this._field).filter((e) => e !== this.HUMAN_PLAYER && e !== this.AI_PLAYER);\n        let cell;\n        logger.info(emptyCells);\n        if (emptyCells.length < 8) {\n            cell = this.getBestMove(player);\n        } else {\n            cell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        }\n        const row = Math.floor(cell / 3);\n        const column = cell % 3;\n        logger.info(row, column);\n        logger.warn(this._field[row][column]);\n        this._field[row][column] = player;\n        this._turns.push({\n            row,\n            column,\n            player,\n        });\n        this._indexOfPlayerToTurn = player === this.AI_PLAYER ? this.HUMAN_PLAYER : this.AI_PLAYER;\n    }\n\n    isOver() {\n        if (this.isWinning(this.HUMAN_PLAYER)) {\n            logger.info('Human won', _.flatten(this._field))\n            return this.HUMAN_PLAYER;\n        }\n        if (this.isWinning(this.AI_PLAYER)) {\n            logger.info('AI won', _.flatten(this._field))\n            return this.AI_PLAYER;\n        }\n\n        const emptyCells = _.flatten(this._field).reduce((a, e) => Number.isInteger(e) ? a + 1 : a, 0);\n        if (!emptyCells) {\n            return -1;\n        }\n\n        return 0;\n    }\n\n    getBestMove(player) {\n        const flattenField = _.flatten(this._field);\n        const bestMove = this.minimax(flattenField, player);\n        logger.info('best move', bestMove);\n        return bestMove.index;\n    }\n\n    minimax(newField, player) {\n        const availSpots = this.emptyIndexies(newField);\n\n        logger.info('newField', newField);\n        logger.info('availSpots', availSpots);\n        if (this.isWinning(this.HUMAN_PLAYER, newField)) {\n            return {\n                score: -10,\n            };\n        } else if (this.isWinning(this.AI_PLAYER, newField)) {\n            return {\n                score: 10,\n            };\n        } else if (availSpots.length === 0) {\n            return {\n                score: 0,\n            };\n        }\n\n        const moves = [];\n\n        for (let i = 0; i < availSpots.length; i++) {\n            const move = {};\n            move.index = newField[availSpots[i]];\n\n            newField[availSpots[i]] = player;\n            if (player == this.AI_PLAYER) {\n                let result = this.minimax(newField, this.HUMAN_PLAYER);\n                move.score = result.score;\n            } else {\n                let result = this.minimax(newField, this.AI_PLAYER);\n                move.score = result.score;\n            }\n\n            newField[availSpots[i]] = move.index;\n            logger.info('move', move);\n            moves.push(move);\n        }\n\n        let bestMove;\n        if (player === this.AI_PLAYER) {\n            let bestScore = -10000;\n            for (let i = 0; i < moves.length; i++) {\n                if (moves[i].score > bestScore) {\n                    bestScore = moves[i].score;\n                    bestMove = i;\n                }\n            }\n        } else {\n            let bestScore = 10000;\n            for (let i = 0; i < moves.length; i++) {\n                if (moves[i].score < bestScore) {\n                    bestScore = moves[i].score;\n                    bestMove = i;\n                }\n            }\n        }\n        return moves[bestMove];\n    }\n\n    emptyIndexies(board) {\n        return board.filter((s) => s !== this.HUMAN_PLAYER && s !== this.AI_PLAYER);\n    }\n\n    isWinning(player, board = _.flatten(this._field)) {\n        return (board[0] === player && board[1] === player && board[2] === player) ||\n            (board[3] === player && board[4] === player && board[5] === player) ||\n            (board[6] === player && board[7] === player && board[8] === player) ||\n            (board[0] === player && board[3] === player && board[6] === player) ||\n            (board[1] === player && board[4] === player && board[7] === player) ||\n            (board[2] === player && board[5] === player && board[8] === player) ||\n            (board[0] === player && board[4] === player && board[8] === player) ||\n            (board[2] === player && board[4] === player && board[6] === player);\n    }\n}\n\nexport {\n    Game,\n};\n","import express from 'express';\nimport game from './game';\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => res.render('index'));\n\nrouter.use('/game', game);\n\nexport default router;\n","module.exports = require(\"bunyan\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"morgan\");","import express from 'express';\nimport path from 'path';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\n\nimport './db/connection';\nimport index from './routes/index';\n\nconst app = express();\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(morgan('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false,\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\n\napp.use(function(req, res, next) {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\napp.use(function(err, req, res) {\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nexport default app;\n","module.exports = require(\"socket.io\");","export default {\n    connectionAddress: `mongodb://cnxo138mx18:mIaudm9asud9SAUdamusd@test-shard-00-00-b4nqr.mongodb.net:27017,test-shard-00-01-b4nqr.mongodb.net:27017,test-shard-00-02-b4nqr.mongodb.net:27017/test?ssl=true&replicaSet=Test-shard-0&authSource=admin`,\n}\n","import mongoose from 'mongoose';\nimport config from '../config';\n\n\nmongoose.Promise = global.Promise;\ntry {\n    mongoose.connect(config.connectionAddress);\n} catch (error) {\n    console.log(error);\n}\n","module.exports = require(\"http\");"],"sourceRoot":""}